@model Citations.Models.Article

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Article</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form enctype="multipart/form-data" asp-action="Edit" id="form_id">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Articleid" id="Articleid"/>
            <div class="form-group">
                <label asp-for="Articletittle" class="control-label"></label>
                <input asp-for="Articletittle" class="form-control" id="Articletittle" />
                <span asp-validation-for="Articletittle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ArticletittleEn" class="control-label"></label>
                <input asp-for="ArticletittleEn" class="form-control" id="ArticletittleEn" />
                <span asp-validation-for="ArticletittleEn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="ScannedArticlePdf" id="ScannedArticlePdf" type="hidden" />
                <label asp-for="ScannedArticlePdf" class="control-label"></label>
                @if (Model.ScannedArticlePdf != null)
                {
                    <div>
                        <p>@Model.ScannedArticlePdf</p>
                        upload another article    <input class="form-control btn-primary" id="myfile" type="file" name="articlefile">
                    </div>
                }
                else
                {
                    <p>  upload article </p>
                    <input type="file" id="myfile" name="articlefile">
                }
                <span asp-validation-for="ScannedArticlePdf" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BriefQuote" class="control-label"></label>
                <input asp-for="BriefQuote" class="form-control" id="BriefQuote" />
                <span asp-validation-for="BriefQuote" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BriefQuoteEn" class="control-label"></label>
                <input asp-for="BriefQuoteEn" class="form-control" id="BriefQuoteEn"/>
                <span asp-validation-for="BriefQuoteEn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfCitations" class="control-label"></label>
                <input asp-for="NumberOfCitations" class="form-control" id="NumberOfCitations"/>
                <span asp-validation-for="NumberOfCitations" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NumberOfReferences" class="control-label"></label>
                <input asp-for="NumberOfReferences" class="form-control" id="NumberOfReferences" />
                <span asp-validation-for="NumberOfReferences" class="text-danger"></span>
            </div>
            @*<div class="form-group">
            <label asp-for="ArticleIssue" class="control-label"></label>
            <select asp-for="ArticleIssue" class="form-control" asp-items="ViewBag.ArticleIssue"></select>
            <span asp-validation-for="ArticleIssue" class="text-danger"></span>
        </div>*@
            <div class="form-group">
                <select asp-for="KeyWords" asp-items="ViewBag.key" id="multiSelectDropDown" class="form-control" multiple="multiple"></select>
            </div>
            <div class="form-group">
                <table class="table table-bordered ">
                    <tr>
                        <th width="25%">المؤسسة</th>
                        <th width="25%">المجله</th>
                        <th width="25%">العدد</th>
                        <th width="25%">اصدار العدد</th>
                    </tr>
                    <tr class="mycontainer2" id="mainrow2">
                        <td>

                            <select id="productCategory2" class="pc2 form-control" asp-items="ViewBag.institution" asp-for="@Model.ArticleIssueNavigation.MagazineIssue.Magazine.Institutionid" onchange="LoadProductx(this)">
                            </select>

                        </td>
                        <td>
                            <select id="product" class="product form-control" onchange="LoadProduct2x(this)">
                                <option value="@Model.ArticleIssueNavigation.MagazineIssue.Magazineid">@Model.ArticleIssueNavigation.MagazineIssue.Magazine.Name</option>
                            </select>
                        </td>

                        <td>
                            <select id="product2" class="product2 form-control" onchange="LoadProduct3x(this)">
                                <option value="@Model.ArticleIssueNavigation.MagazineIssue.Issueid">@Model.ArticleIssueNavigation.MagazineIssue.Issuenumber</option>
                            </select>
                        </td>

                        <td>
                            <select asp-for="ArticleIssue" id="product3" class="product3 form-control">
                                <option value="@Model.ArticleIssueNavigation.IssueOfIssueid">@Model.ArticleIssueNavigation.IssuenumberOfIssue</option>
                            </select>
                            <span asp-validation-for="ArticleIssue" class="text-danger"></span>
                        </td>


                    </tr>
                </table>


                @*<select asp-for="ArticleIssue" class="form-control" asp-items="ViewBag.ArticleIssue"></select>*@
            </div>
            <hr />
            <table class="table table-bordered">
                <tr>
                    <th>المؤلف</th>
                    <th>المؤلف الاساسي ؟</th>
                    <th>اضافه</th>
                </tr>
                <tr class="mycontainer" id="mainrow">
                    <td>
                        <select id="productCategory" class="pc form-control" style="width:100%" asp-items="ViewBag.Authors"></select>

                    </td>
                    <td>
                        <input type="radio" id="m" name="ma" class="ma">
                    </td>

                    <td>
                        <input type="button" id="add" value="add" style="width:80px" class="btn btn-success" />
                    </td>
                </tr>
            </table>

                <table class="table table-bordered" id="orderdetailsItems">
                    @foreach (var x in Model.ArticleAuthores)
                    {
                        <tr class="mycontainer bg-success">
                            <td>
                                <select class="pc rounded" style="width:100%">
                                    <option value="@x.Authorid">@x.Author.Name</option>
                                </select>
                            </td>
                            <td>
                                <input type="radio" name="ma" class="ma" @(Html.Raw(x.MainAuthor ? "checked=\"checked\"" : ""))>
                            </td>
                            <td>
                                <input type="button" value="remove" style="width:80px" class="remove btn btn-danger" />
                            </td>
                        </tr>
                    }
                </table>
    


            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
                </label>
            </div>
            <div class="form-group">
                <input type="button" value="Save" onclick="SendAuthors()" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>

 function LoadProduct(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getmagazine",
            data: { 'Institutionid': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct($(categoryDD).parents('.mycontainer2').find('select.product'), $(categoryDD).parents('.mycontainer2').find('select.product option'), data).then(LoadProduct2($(categoryDD).parents('.mycontainer2').find('select.product')).then(LoadProduct3($(categoryDD).parents('.mycontainer2').find('select.product2'))))
                 

            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    async function renderProduct(element, ele, data) {
        //render product

        var $ele = $(element);
        $.each(data, function (i, val) {
            if (ex(ele, val.Magazineid) == false) {
                $ele.append($('<option/>').val(val.Magazineid).text(val.Name));
            }
        })
        return;
    }

    async function LoadProduct2(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getissue",
            data: { 'Magazineid': $(categoryDD).val() },
            success: function (data) {

                renderProduct2($(categoryDD).parents('.mycontainer2').find('select.product2'), $(categoryDD).parents('.mycontainer2').find('select.product2 option'), data).then(LoadProduct3($(categoryDD).parents('.mycontainer2').find('select.product2')));
                
            },
            error: function (error) {
                console.log(error);
            }
        })
        return;
    }

    async function renderProduct2(element, ele, data) {
        //render product
        var $ele = $(element);

        $.each(data, function (i, val) {

            if (ex(ele, val.Issueid) == false) {

                $ele.append($('<option/>').val(val.Issueid).text(val.Issuenumber));
            }
        })
        return;
    }



    function LoadProduct3(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getissueversion",
            data: { 'magazineissueid': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct3($(categoryDD).parents('.mycontainer2').find('select.product3'), $(categoryDD).parents('.mycontainer2').find('select.product3 option'), data);
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    function renderProduct3(element, ele, data) {
        //render product
        var $ele = $(element);


        $.each(data, function (i, val) {
            if (ex(ele, val.IssueOfIssueid) == false) {
                $ele.append($('<option/>').val(val.IssueOfIssueid).text(val.IssuenumberOfIssue));
            }
        })
    }

    function ex(element, vals) {
        var exists = false;
        for (var i = 0, opts = element; i < opts.length; ++i)
            if (opts[i].value == vals) {
                exists = true;
                break;
            }
        return exists;
    }

    function LoadProductx(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getmagazine",
            data: { 'Institutionid': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProductx($(categoryDD).parents('.mycontainer2').find('select.product'), data).then(LoadProduct2x($(categoryDD).parents('.mycontainer2').find('select.product')).then(LoadProduct3x($(categoryDD).parents('.mycontainer2').find('select.product2'))));

              

            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    async function renderProductx(element, data) {
        //render product
        var $ele = $(element);
        $ele.empty();

        $.each(data, function (i, val) {
            $ele.append($('<option/>').val(val.Magazineid).text(val.Name));
        })
        return;
    }


    //fetch products
    async function LoadProduct2x(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getissue",
            data: { 'Magazineid': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct2x($(categoryDD).parents('.mycontainer2').find('select.product2'), data).then(LoadProduct3x($(categoryDD).parents('.mycontainer2').find('select.product2')));
            },
            error: function (error) {
                console.log(error);
            }
        })
        return;
    }

    async function renderProduct2x(element, data) {
        //render product
        var $ele = $(element);
        $ele.empty();

        $.each(data, function (i, val) {
            $ele.append($('<option/>').val(val.Issueid).text(val.Issuenumber));
        })
        return;
    }


    function LoadProduct3x(categoryDD) {

        $.ajax({
            type: "GET",
            url: "/Articles/getissueversion",
            data: { 'magazineissueid': $(categoryDD).val() },
            success: function (data) {
                //render products to appropriate dropdown
                renderProduct3x($(categoryDD).parents('.mycontainer2').find('select.product3'), data);
            },
            error: function (error) {
                console.log(error);
            }
        })
    }

    function renderProduct3x(element, data) {
        //render product
        var $ele = $(element);
        $ele.empty();

        $.each(data, function (i, val) {
            $ele.append($('<option/>').val(val.IssueOfIssueid).text(val.IssuenumberOfIssue));
        })
    }

    function checkForDuplicates(array) {
        return new Set(array).size !== array.length
    }

    $(document).ready(function () {
        $("#multiSelectDropDown").chosen({
            width: "100%"
        });




        var yy = $("#productCategory2");

        LoadProduct(yy);



        $("#productCategory").select2();
        $("#productCategory2").select2();
        $("#product").select2();
        $("#product2").select2();
        $("#product3").select2();

        //setTimeout(function () {
        //    var xx = $(".product");
        //    for (var ii = 0; ii < xx.length; ii++) {
        //        LoadProduct2(xx[ii]);
        //    } }, 1000);


        $("#add").click(function () {
            var $newRow = $('#mainrow').clone().removeAttr('id');
            $('.pc', $newRow).val($('#productCategory').val());
            if ($('#m').is(':checked')) {
                $('.ma', $newRow).prop('checked', true);
            }
            else {
                $('.ma', $newRow).prop('checked', false);
            }
            var yourArray2 = new Array();

            $('#orderdetailsItems  tr').each(function (index, ele) {
                yourArray2.push($('.pc', this).val());

            }
            );

            yourArray2.push($('#productCategory').val());


            if (checkForDuplicates(yourArray2) != true) {
                $('#add', $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');
                $('#productCategory,#m,#add', $newRow).removeAttr('id');
                $('#orderdetailsItems').append($newRow);
            }



        })
    });


        $('#orderdetailsItems').on('click', '.remove', function () {
            $(this).parents('tr').remove();
        });

     function SendAuthors()
     {
         if ($("#form_id").valid()) {

             var things = [];
             $('#orderdetailsItems  tr').each(function (index, ele) {

                 var articleauthors = {

                     author: parseInt($('.pc', this).val()),
                     main: $('.ma', this).is(':checked') ? true : false

                 }
                 things.push(articleauthors);

             })



             var data = {
                 articleauthors1: things
             }

             $.ajax({
                 type: 'POST',
                 contentType: 'application/json; charset=utf-8',
                 url: "@Url.Action("save", "Articles")",
                 data: JSON.stringify(data),
                 success: function (result) {
                     if (result.success == false) {
                         alert("Failed!")
                     }
                     else {
                         asd();
                     }

                 },
                 error: function () { alert("Something went Wrongerror") }
             });

         }
    }

      function asd()
     {

         var data = new FormData();
         var files = $("#myfile").get(0).files;
         data.append("afiles", files[0]);


         var yourArray = $("#multiSelectDropDown").val();

          data.append("keyw", yourArray);
        
          data.append("Articleid", document.getElementById("Articleid").value);
         data.append("Articletittle", document.getElementById("Articletittle").value);
          data.append("ArticletittleEn", document.getElementById("ArticletittleEn").value);
          data.append("ScannedArticlePdf", document.getElementById("ScannedArticlePdf").value);
         data.append("BriefQuote", document.getElementById("BriefQuote").value);
         data.append("BriefQuoteEn", document.getElementById("BriefQuoteEn").value);
         data.append("NumberOfCitations", document.getElementById("NumberOfCitations").value);
         data.append("NumberOfReferences", document.getElementById("NumberOfReferences").value);
         if (document.getElementById("product3").value != 0) {
             data.append("ArticleIssue", document.getElementById("product3").value);
         }
         data.append("Active", document.getElementById("Active").value);

                $.ajax({
                    type: 'POST',
                    url: "@Url.Action("Edit", "Articles")",
                    data: data,
                    contentType: false,
                    processData: false,

                    success: function (result) {
                        if (result.success == false) {
                            alert("Failed!")
                        }
                        else
                        {
                            window.location.href = '/Articles/Index';
                        }

                    },
                        error: function () { alert("Something went Wrongerror")}
                });


    }


</script>
}
